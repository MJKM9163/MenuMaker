{"version":3,"sources":["components/makers/Maker.js","containers/makers/MenuListContainer.js","containers/makers/MakerContainer.js","lib/createRequestSaga.js","lib/api/client.js","modules/maker.js","lib/api/maker.js","modules/setting.js","containers/makers/MakerLoading.js","components/MenuBar.js","components/Setting.js","containers/setting/SettingContainer.js","App.js","reportWebVitals.js","modules/DBSave.js","lib/api/DBSave.js","modules/index.js","index.js"],"names":["MakerBlock","styled","div","ItemBlock","MaketItem","rice","main","mainNumber","side","sideNumber","className","menuname","map","item","Maker","time","rices","mains","sides","MenuListContainerBlock","MenuListContainer","times","repeat","MakerContainerBlock","MenuListBlock","ButtonsBlock","MakerContainer","useSelector","maker","number","setting","keys","numberKey","splice","console","log","key","createRequestSaga","type","request","SUCCESS","action","call","payload","response","put","data","client","axios","create","menuSaga","MENU_RICE_MAKER","MENU_MAIN_MAKER","MENU_SIDE_MAKER","makerRice","createAction","makerMain","makerSide","riceSaga","post","mainSaga","sideSaga","takeLatest","handleActions","state","errer","error","REPEAT","repeatSetting","MakerWait","MakerLoading","useState","check","setCheck","dispatch","useDispatch","useEffect","setTimeout","MenuBarBlock","Links","Link","MenuBar","to","SettingBlock","InputBlock","Inputs","Setting","onSubmit","SettingContainerBlock","withRouter","history","e","numberValue","target","value","preventDefault","push","App","path","component","exact","SettingContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","dbSaveSaga","DB_SAVE","CHANGE_FIELD","initialState","description","main_ingredient","ingredient","category","cook_type","sauce_base","saveSaga","DBSave","form","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"iOAGMA,EAAaC,IAAOC,IAAV,8IAUVC,EAAYF,IAAOC,IAAV,8YAyBTE,EAAY,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WAG/C,OACI,eAACN,EAAD,WACI,qBAAKO,UAAU,YAAf,SACKL,EAAKM,WALD,CAAC,EAAG,GAOHC,KAAI,SAAAC,GAAI,OACd,qBAAgBH,UAAS,oBAAeG,GAAxC,SACKP,EAAKO,EAAON,GAAYI,UADnBE,MAPL,CAAC,EAAG,EAAG,GAWND,KAAI,SAAAC,GAAI,OACd,qBAAgBH,UAAS,oBAAeG,GAAxC,SACKL,EAAKK,EAAOJ,GAAYE,UADnBE,UAuBXC,EAfD,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MAAOV,EAAoC,EAApCA,WAAYW,EAAwB,EAAxBA,MAAOT,EAAiB,EAAjBA,WACpD,OACI,eAACT,EAAD,WACKe,EACG,cAAC,EAAD,CACIV,KAAMW,EACNV,KAAMW,EACNT,KAAMU,EACNX,WAAYA,EACZE,WAAYA,QCjE1BU,EAAyBlB,IAAOC,IAAV,4ZA0CbkB,EAvBW,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACjCG,EAAQ,CAAC,SAAU,QAAS,SAE5Bd,EAAa,CAAC,EAAG,EAAG,GACpBE,EAAa,CAAC,EAAG,EAAG,GAE1B,OACI,cAACU,EAAD,UALe,CAAC,EAAG,EAAG,GAMNP,KAAI,SAAAU,GAAM,OAClB,cAAC,EAAD,CAEIP,KAAMM,EAAMC,GACZN,MAAOA,EAAMM,GACbL,MAAOA,EACPV,WAAYA,EAAWe,GACvBJ,MAAOA,EACPT,WAAYA,EAAWa,IANlBA,SC3BnBC,EAAsBtB,IAAOC,IAAV,0OAanBsB,EAAgBvB,IAAOC,IAAV,yPAabuB,EAAexB,IAAOC,IAAV,kLAoDHwB,EAxCQ,WAAO,IAAD,EAEOC,aAAY,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACxDZ,MAAOY,EAAMZ,MACbC,MAAOW,EAAMX,MACbC,MAAOU,EAAMV,UAHTF,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,MAAOC,EAFG,EAEHA,MAKdW,EAAWF,aAAY,kBAAkB,CAC7CE,OAD2B,EAAGC,QACdD,WADZA,OAGFE,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAKrC,OAHAD,EAAKE,OAAOJ,EAAQ,EAAIA,GAExBK,QAAQC,IAAI,+DAER,eAACZ,EAAD,WACI,qBAAKb,UAAU,OAAf,qGAGA,cAACc,EAAD,UACKO,EAAKnB,KAAI,SAAAwB,GAAG,OACT,cAAC,EAAD,CAEIJ,UAAWA,EAAUI,GACrBpB,MAAOA,EAAMoB,GACbnB,MAAOA,EAAMmB,GACblB,MAAOA,EAAMkB,IAJRA,QAOjB,eAACX,EAAD,WACI,kDACA,wDACA,+D,wDC3ED,SAASY,EAAkBC,EAAMC,GAC5C,IAAMC,EAAO,UAAMF,EAAN,YAGb,iBAAO,WAAUG,GAAV,uEAGkB,OAHlB,SAECP,QAAQC,IAAIM,GAFb,SAGwBC,YAAKH,EAASE,EAAOE,SAH7C,OAMC,OAHMC,EAHP,OAICV,QAAQC,IAAI,sBACZD,QAAQC,IAAIS,GALb,SAMOC,YAAI,CACNP,KAAME,EACNG,QAASC,EAASE,OARvB,+BAWC,OAXD,oCAWOD,YAAI,CACNP,KAdI,gBAeJK,QAAQ,EAAD,KAbZ,yD,cCHII,E,OAFAC,EAAMC,S,WCkCJC,GA/BXC,EAAkB,wBAClBC,EAAkB,wBAClBC,EAAkB,wBASXC,EAAYC,YACrBJ,GAAiB,SAACtB,GAAD,OAAaA,KAErB2B,EAAYD,YACrBH,GAAiB,SAACvB,GAAD,OAAaA,KAErB4B,EAAYF,YACrBF,GAAiB,SAACxB,GAAD,OAAaA,KAU5B6B,EAAWrB,EAAkBc,GC/BP,SAACtB,GAAD,OACxBkB,EAAOY,KAAK,sBAAwB9B,MD+BlC+B,EAAWvB,EAAkBe,GC7BP,SAACvB,GAAD,OACxBkB,EAAOY,KAAK,sBAAwB9B,MD6BlCgC,EAAWxB,EAAkBgB,GC3BP,SAACxB,GAAD,OACxBkB,EAAOY,KAAK,sBAAwB9B,MD2BjC,SAAUqB,IAAV,iEACH,OADG,SACGY,YAAWX,EAAiBO,GAD/B,OAEH,OAFG,SAEGI,YAAWV,EAAiBQ,GAF/B,OAGH,OAHG,SAGGE,YAAWT,EAAiBQ,GAH/B,uCAMP,I,iBAsBejC,GAtBDmC,aAAa,mBAlCK,iCAoCG,SAACC,EAAD,OAAmBhD,EAAnB,EAAU2B,QAAV,mBAAC,eACrBqB,GADoB,IAEvBhD,aAJe,cAjCK,iCAuCG,SAACgD,EAAD,OAAmB/C,EAAnB,EAAU0B,QAAV,mBAAC,eACrBqB,GADoB,IAEvB/C,aARe,cAhCK,iCA0CG,SAAC+C,EAAD,OAAmB9C,EAAnB,EAAUyB,QAAV,mBAAC,eACrBqB,GADoB,IAEvB9C,aAZe,cA/BX,iBA6CG,SAAC8C,EAAD,OAAmBC,EAAnB,EAAUtB,QAAV,mBAAC,eACLqB,GADI,IAEPC,aAhBe,GAhBN,CACjBjD,MAAO,GACPC,MAAO,GACPC,MAAO,GACPgD,MAAO,OE5BLC,GAAS,iBAEFC,GAAgBb,YACzBY,IAiBWrC,GAVCiC,YAAc,eAErBI,IAAS,SAACH,EAAD,OAAmBnC,EAAnB,EAAUc,QAAV,mBAAC,eACJqB,GADG,IAENnC,cARS,CACjBA,OAAQ,MCFNwC,GAAYpE,IAAOC,IAAV,osBAiEAoE,GAlCM,WAAO,IAAD,EACGC,oBAAS,GADZ,mBAChBC,EADgB,KACTC,EADS,KAGjB5C,EAASF,aAAY,qBAAEG,QACjBD,UAGN6C,EAAWC,cAajB,OAXAC,qBAAU,WACNF,EAASpB,EAAU,CAACzB,YACpB6C,EAASlB,EAAU,CAAC3B,YACpB6C,EAASjB,EAAU,CAAC5B,YACpBgD,YAAW,WACPJ,GAAS,KACV,OACL,IAEFvC,QAAQC,IAAI,2CAGR,mCACKqC,EACG,cAAC,EAAD,IAEA,eAACH,GAAD,WACI,iGACA,8B,SC5DdS,GAAe7E,IAAOC,IAAV,seA0BZ6E,GAAQ9E,YAAO+E,KAAP/E,CAAH,qZAuCIgF,GApBC,WAEZ,OACI,eAACH,GAAD,WACI,qBAAKpE,UAAU,OAAf,uBAGA,sBAAKA,UAAU,MAAf,UACI,cAACqE,GAAD,CAAOG,GAAG,SAAV,6CACA,cAACH,GAAD,CAAOG,GAAG,WAAV,6BAGJ,sBAAKxE,UAAU,UAAf,iEACgB,uBACZ,6DC5DVyE,GAAelF,IAAOC,IAAV,4PAcZkF,GAAanF,IAAOC,IAAV,sQAcVmF,GAASpF,IAAOC,IAAV,6UAmDGoF,GA9BC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEf,OACI,eAACJ,GAAD,WACI,qBAAKzE,UAAU,OAAf,uCACA,cAAC0E,GAAD,UACI,uBAAMG,SAAUA,EAAhB,UACI,eAACF,GAAD,8CACI,mCACI,uCACA,uCACA,uCACA,uCACA,uCACA,uCACA,6CAGR,eAACA,GAAD,8CAAe,6BACf,eAACA,GAAD,6CAAc,6BACd,oEAGR,qBAAK3E,UAAU,UAAf,uCCrEN8E,GAAwBvF,IAAOC,IAAV,4BAmBZuF,gBAjBU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClBhB,EAAWC,cASjB,OACI,cAACa,GAAD,UACI,cAAC,GAAD,CAASD,SATA,SAACI,GACd,IAAMC,EAAcD,EAAEE,OAAO,GAAGC,MAChCH,EAAEI,iBACFrB,EAASN,GAAcwB,IACvBF,EAAQM,KAAK,aCENC,I,GAAAA,GAXf,WACE,OACE,qCACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWlB,GAASmB,OAAK,IACzC,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWE,KAClC,cAAC,IAAD,CAAOH,KAAK,SAASC,UAAW7B,SCAvBgC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCkCGQ,IApCXC,GAAU,eAGVC,GAAe,oBAqBfC,IAnBgB3D,YAClByD,IAAS,kBAC0C,CAC/CrG,SAFK,EAAGA,SAGRL,KAHK,EAAaA,KAIlB6G,YAJK,EAAmBA,YAKxBC,gBALK,EAAgCA,gBAMrCC,WANK,EAAiDA,WAOtDC,SAPK,EACGA,SAORC,UARK,EACaA,UAQlBC,WATK,EACwBA,eAYfjE,YAClB0D,IAIiB,CACjBtG,SAAU,KACVL,KAAM,KACN6G,YAAa,8CACbC,gBAAiB,KACjBC,WAAY,KACZC,SAAU,KACVC,UAAW,KACXC,WAAY,OAGVC,GAAWpF,EAAkB2E,ICrCT,SAAC,GAAD,IACtBrG,EADsB,EACtBA,SACAL,EAFsB,EAEtBA,KACA6G,EAHsB,EAGtBA,YACAC,EAJsB,EAItBA,gBACAC,EALsB,EAKtBA,WACAC,EANsB,EAMtBA,SACAC,EAPsB,EAOtBA,UACAC,EARsB,EAQtBA,WARsB,OAQLzE,EAAOY,KAAK,yBAA0B,CACnDhD,WAAUL,OAAM6G,cAAaC,kBAAiBC,aAAYC,WAAUC,YAAWC,kBD6BhF,SAAUT,KAAV,iEACH,OADG,SACGjD,YAAWkD,GAASS,IADvB,wCAIP,IAsBeC,GAtBA3D,aAAa,qBAvCJ,wBAyCG,SAAAC,GAAK,OAAIkD,MAFR,eAtCJ,wBAyCG,SAAClD,EAAD,KAAUrB,QAAV,mBAAC,eACbqB,GADY,IAEfrD,SAAU,KACVL,KAAM,KACN6G,YAAa,8CACbC,gBAAiB,KACjBC,WAAY,KACZC,SAAU,KACVC,UAAW,KACXC,WAAY,UAZI,eAcnBP,IAAe,SAACjD,EAAD,WAAUrB,QAAWgF,EAArB,EAAqBA,KAAM7B,EAA3B,EAA2BA,MAA3B,mBAAC,eACV9B,GADS,kBAEX2D,EAAO7B,OAhBQ,IAmBxBoB,I,YEpDaU,IAAV,SAAUA,KAAV,iEACH,OADG,SACGC,YAAI,CAACd,KAAc7D,MADtB,wCAIQ4E,OAVKC,aAAgB,CAChCnG,SACA8F,UACA5F,aCEEkG,GAAiBC,eACjBC,GAAQC,aAAYL,GAAaM,aAAgBJ,KAEvDA,GAAeK,IAAIT,IAEnBU,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJM,SAASC,eAAe,SAG1BnC,O","file":"static/js/main.e6f7f5d4.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MakerBlock = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    h3 {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nconst ItemBlock = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .riceBlock {\r\n        color: pink\r\n    }\r\n    .mainBlock_0 {\r\n        color: red;\r\n    }\r\n    .mainBlock_1 {\r\n        color: blue;\r\n    }\r\n    .sideBlock_0 {\r\n        color: green;\r\n    }\r\n    .sideBlock_1 {\r\n        color: orange;\r\n    }\r\n    .sideBlock_2 {\r\n        color: gray;\r\n    }\r\n`\r\n\r\nconst MaketItem = ({ rice, main, mainNumber, side, sideNumber }) => {\r\n    const mainItem = [0, 1];\r\n    const sideItem = [0, 1, 2];\r\n    return (\r\n        <ItemBlock>\r\n            <div className=\"riceBlock\">\r\n                {rice.menuname}\r\n            </div>\r\n            {mainItem.map(item => (\r\n                <div key={item} className={`mainBlock_${item}`}>\r\n                    {main[item + mainNumber].menuname}\r\n                </div>\r\n            ))}\r\n            {sideItem.map(item => (\r\n                <div key={item} className={`sideBlock_${item}`}>\r\n                    {side[item + sideNumber].menuname}\r\n                </div>\r\n            ))}\r\n        </ItemBlock>\r\n    )\r\n}\r\n\r\nconst Maker = ({ time, rices, mains, mainNumber, sides, sideNumber }) => {\r\n    return (\r\n        <MakerBlock>\r\n            {time}\r\n                <MaketItem\r\n                    rice={rices}\r\n                    main={mains}\r\n                    side={sides}\r\n                    mainNumber={mainNumber}\r\n                    sideNumber={sideNumber}\r\n                />\r\n        </MakerBlock>\r\n    );\r\n};\r\n\r\nexport default Maker;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Maker from '../../components/makers/Maker';\r\n\r\nconst MenuListContainerBlock = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 200px;\r\n    height: 500px;\r\n    outline: 1px solid black;\r\n    border-top: 1px solid black;\r\n    border-bottom: 1px solid black;\r\n\r\n    :hover {\r\n        outline: 1px solid red;\r\n        border-top: 1px solid red;\r\n        border-bottom: 1px solid red;\r\n    }\r\n`;\r\n\r\n\r\nconst MenuListContainer = ({ rices, mains, sides }) => {\r\n    const times = [\"moning\", \"lunch\", \"diner\"];\r\n    const Repetition = [0, 1, 2];\r\n    const mainNumber = [0, 2, 4];\r\n    const sideNumber = [0, 3, 6];\r\n\r\n    return (\r\n        <MenuListContainerBlock>\r\n            {Repetition.map(repeat => (\r\n                <Maker\r\n                    key={repeat}\r\n                    time={times[repeat]}\r\n                    rices={rices[repeat]}\r\n                    mains={mains}\r\n                    mainNumber={mainNumber[repeat]}\r\n                    sides={sides}\r\n                    sideNumber={sideNumber[repeat]}\r\n                />\r\n            ))}\r\n        </MenuListContainerBlock>\r\n    );\r\n};\r\n\r\nexport default MenuListContainer;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MenuListContainer from './MenuListContainer';\r\n\r\n\r\nconst MakerContainerBlock = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n\r\n    .logo {\r\n        font-size: 22px;\r\n        cursor: default;\r\n    }\r\n`;\r\n\r\nconst MenuListBlock = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 650px;\r\n    outline: 1px solid black;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n\r\n    :hover {\r\n        outline: 1px solid rgb(23, 170, 255);\r\n    }\r\n`\r\n\r\nconst ButtonsBlock = styled.div`\r\n    display: flex;\r\n    margin-bottom: 4px;\r\n\r\n    button {\r\n        width: 70px;\r\n        height: 70px;\r\n        margin: 0px 20px 10px 20px;\r\n    }\r\n`\r\n\r\n\r\nconst MakerContainer = () => {\r\n\r\n    const { rices, mains, sides } = useSelector(({ maker }) => ({\r\n        rices: maker.rices,\r\n        mains: maker.mains,\r\n        sides: maker.sides,\r\n    }));\r\n    const { number } = useSelector(({ setting }) => ({\r\n        number: setting.number,\r\n    }));\r\n    const keys = [0, 1, 2, 3, 4, 5, 6, 7];\r\n    const numberKey = [0, 1, 2, 3, 4, 5, 6];\r\n\r\n    keys.splice(number, 8 - number)\r\n\r\n    console.log(\"랜더링 확인----------------------------\")\r\n    return (\r\n        <MakerContainerBlock>\r\n            <div className=\"logo\">\r\n                만들기 컨테이너 컴포넌트입니다.\r\n            </div>\r\n            <MenuListBlock>\r\n                {keys.map(key => (\r\n                    <MenuListContainer\r\n                        key={key}\r\n                        numberKey={numberKey[key]}\r\n                        rices={rices[key]}\r\n                        mains={mains[key]}\r\n                        sides={sides[key]} />\r\n                ))}\r\n            </MenuListBlock>\r\n            <ButtonsBlock>\r\n                <button>설정</button>\r\n                <button>재생성</button>\r\n                <button>프린트</button>\r\n            </ButtonsBlock>\r\n        </MakerContainerBlock>\r\n    );\r\n};\r\n\r\nexport default MakerContainer;","import { call, put } from 'redux-saga/effects';\r\n//import { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport default function createRequestSaga(type, request) {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = 'maker/FAILURE';\r\n\r\n    return function*(action) {\r\n        try {\r\n            console.log(action)\r\n            const response = yield call(request, action.payload);\r\n            console.log(\"넘어감\")\r\n            console.log(response);\r\n            yield put({\r\n                type: SUCCESS,\r\n                payload: response.data,\r\n            });\r\n        } catch (error) {\r\n            yield put({\r\n                type: FAILURE,\r\n                payload: error,\r\n            });\r\n        }\r\n    };\r\n}","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport * as menuAPI from '../lib/api/maker';\r\n\r\nconst MENU_RICE_MAKER = 'maker/MENU_RICE_MAKER';\r\nconst MENU_MAIN_MAKER = 'maker/MENU_MAIN_MAKER';\r\nconst MENU_SIDE_MAKER = 'maker/MENU_SIDE_MAKER';\r\nconst MENU_RICE_MAKER_SUCCESS = 'maker/MENU_RICE_MAKER_SUCCESS';\r\nconst MENU_MAIN_MAKER_SUCCESS = 'maker/MENU_MAIN_MAKER_SUCCESS';\r\nconst MENU_SIDE_MAKER_SUCCESS = 'maker/MENU_SIDE_MAKER_SUCCESS';\r\nconst FAILURE = 'maker/FAILURE';\r\n// const MENU_RICE_MAKER_FAILURE = 'maker/MENU_RICE_MAKER_FAILURE';\r\n// const MENU_MAIN_MAKER_FAILURE = 'maker/MENU_MAIN_MAKER_FAILURE';\r\n// const MENU_SIDE_MAKER_FAILURE = 'maker/MENU_SIDE_MAKER_FAILURE';\r\n\r\nexport const makerRice = createAction(\r\n    MENU_RICE_MAKER, (number) => (number),\r\n)\r\nexport const makerMain = createAction(\r\n    MENU_MAIN_MAKER, (number) => (number),\r\n)\r\nexport const makerSide = createAction(\r\n    MENU_SIDE_MAKER, (number) => (number),\r\n)\r\n\r\nconst initialState = {\r\n    rices: [],\r\n    mains: [],\r\n    sides: [],\r\n    error: null,\r\n};\r\n\r\nconst riceSaga = createRequestSaga(MENU_RICE_MAKER, menuAPI.riceListCall);\r\nconst mainSaga = createRequestSaga(MENU_MAIN_MAKER, menuAPI.mainListCall);\r\nconst sideSaga = createRequestSaga(MENU_SIDE_MAKER, menuAPI.sideListCall);\r\nexport function* menuSaga() {\r\n    yield takeLatest(MENU_RICE_MAKER, riceSaga);\r\n    yield takeLatest(MENU_MAIN_MAKER, mainSaga);\r\n    yield takeLatest(MENU_SIDE_MAKER, sideSaga);\r\n};\r\n\r\nconst maker = handleActions(\r\n    {\r\n        [MENU_RICE_MAKER_SUCCESS]: (state, { payload: rices }) => ({\r\n            ...state,\r\n            rices,\r\n        }),\r\n        [MENU_MAIN_MAKER_SUCCESS]: (state, { payload: mains }) => ({\r\n            ...state,\r\n            mains,\r\n        }),\r\n        [MENU_SIDE_MAKER_SUCCESS]: (state, { payload: sides }) => ({\r\n            ...state,\r\n            sides,\r\n        }),\r\n        [FAILURE]: (state, { payload: errer }) => ({\r\n            ...state,\r\n            errer,\r\n        }),\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default maker;","import client from \"./client\";\r\n\r\nexport const riceListCall = (number) =>\r\n    client.post('/api/menumaker/rice', (number));\r\n\r\nexport const mainListCall = (number) =>\r\n    client.post('/api/menumaker/main', (number));\r\n\r\nexport const sideListCall = (number) =>\r\n    client.post('/api/menumaker/side', (number));","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst REPEAT = 'setting/REPEAT';\r\n\r\nexport const repeatSetting = createAction(\r\n    REPEAT,\r\n);\r\n\r\nconst initialState = {\r\n    number: '1',\r\n};\r\n\r\nconst setting = handleActions(\r\n    {\r\n        [REPEAT]: (state, { payload: number }) => ({\r\n            ...state,\r\n            number,\r\n        }),\r\n    },\r\n    initialState,\r\n)\r\n\r\nexport default setting;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport MakerContainer from './MakerContainer';\r\nimport { makerRice, makerMain, makerSide } from '../../modules/maker';\r\nimport setting from '../../modules/setting';\r\n\r\nconst MakerWait = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    height: 100vh;\r\n    background: #ececec;\r\n\r\n    div {\r\n        width: 80px;\r\n        height: 80px;\r\n        border: 10px solid white;\r\n        border-top: 10px solid #ff7a0c;\r\n        border-radius:50em;\r\n        animation-name: spinCircle;\r\n        animation-duration: 1s;\r\n        animation-iteration-count: infinite;\r\n        animation-timing-function: linear;\r\n\r\n        @keyframes spinCircle {\r\n            from {\r\n                transform: rotate(0);\r\n            }\r\n            to {\r\n                transform: rotate(360deg);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst MakerLoading = () => {\r\n    const [check, setCheck] = useState(false);\r\n\r\n    const number = useSelector(({setting}) => \r\n        setting.number,\r\n    );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(makerRice({number}))\r\n        dispatch(makerMain({number}))\r\n        dispatch(makerSide({number}))\r\n        setTimeout(() => {\r\n            setCheck(true); \r\n        }, 1000);\r\n    },[])\r\n\r\n    console.log('loading 랜더링 확인')\r\n\r\n    return (\r\n        <>\r\n            {check ? (\r\n                <MakerContainer></MakerContainer>\r\n            ) : (\r\n                <MakerWait>\r\n                    <h1>메뉴를 만들고 있습니다!</h1>\r\n                    <div></div>\r\n                </MakerWait>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MakerLoading;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst MenuBarBlock = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    background: whitesmoke;\r\n    width: 25rem;\r\n    height: 100%;\r\n    border-right: 2px solid rgb(161, 161, 161);\r\n\r\n    .logo {\r\n        font-size: 22px;\r\n        cursor: default;\r\n    }\r\n    \r\n    .box {\r\n        width: 100%;\r\n        //margin-bottom: 380px;\r\n    }\r\n\r\n    .address {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst Links = styled(Link)`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 35px;\r\n    text-decoration: none;\r\n    color: black;\r\n    background: #fffeea;\r\n    width: 100%;\r\n    height: 7rem;\r\n    border-top: 1px solid rgb(161, 161, 161);\r\n    & {\r\n        border-bottom: 1px solid rgb(161, 161, 161);\r\n    }\r\n    &:hover {\r\n        background: #fffbb0;\r\n    }\r\n`\r\n\r\nconst MenuBar = () => {\r\n\r\n    return (\r\n        <MenuBarBlock>\r\n            <div className=\"logo\">\r\n                MenuMaker\r\n            </div>\r\n            <div className=\"box\">\r\n                <Links to=\"/maker\">메뉴 만들기</Links>\r\n                <Links to=\"/setting\">설정</Links>\r\n                {/* <Links to=\"/register\">DB 임시 저장</Links> */}\r\n            </div>\r\n            <div className=\"address\">\r\n                기능 추가, 오류 제보<br />\r\n                <b>rhkrrbaudgg@naver.com</b>\r\n            </div>\r\n        </MenuBarBlock>\r\n    );\r\n};\r\n\r\nexport default MenuBar;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst SettingBlock = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    height: 100vh;\r\n    background: #fbffd4;\r\n\r\n    .logo {\r\n        font-size: 25px;\r\n    }\r\n`\r\n\r\nconst InputBlock = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n\r\n    form Button {\r\n        width: 7rem;\r\n        height: 3rem;\r\n        font-size: 15px;\r\n        margin-left: 145px;\r\n        margin-top: 50px;\r\n    }\r\n`\r\n\r\nconst Inputs = styled.div`\r\n    display: flex;\r\n    margin: 15px 0px;\r\n    font-size: 30px;\r\n\r\n    input, select {\r\n        text-align: right;\r\n        font-size: 30px;\r\n        width: 120px;\r\n        margin-left: 100px;\r\n    }\r\n\r\n    :nth-child(3){\r\n        margin-left: 8px;\r\n    }\r\n\r\n    select {\r\n        width: 128px;\r\n    }\r\n`\r\n\r\nconst Setting = ({ onSubmit }) => {\r\n\r\n    return (\r\n        <SettingBlock>\r\n            <div className=\"logo\">설정 화면</div>\r\n            <InputBlock>\r\n                <form onSubmit={onSubmit}>\r\n                    <Inputs>메뉴 생성 수\r\n                        <select>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                            <option>5</option>\r\n                            <option>6</option>\r\n                            <option>7</option>\r\n                        </select>\r\n                    </Inputs>\r\n                    <Inputs>총 식사 인원<input /></Inputs>\r\n                    <Inputs>조리원 인원<input /></Inputs>\r\n                    <button>설정 확인</button>\r\n                </form>\r\n            </InputBlock>\r\n            <div className=\"address\">\r\n                rhkrrbaudgg@naver.com\r\n            </div>\r\n        </SettingBlock>\r\n    );\r\n};\r\n\r\nexport default Setting;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Setting from '../../components/Setting'\r\nimport{ repeatSetting } from '../../modules/setting';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst SettingContainerBlock = styled.div``;\r\n\r\nconst SettingContainer = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (e) => {\r\n        const numberValue = e.target[0].value;\r\n        e.preventDefault();\r\n        dispatch(repeatSetting(numberValue))\r\n        history.push('/');\r\n    } \r\n\r\n    return (\r\n        <SettingContainerBlock>\r\n            <Setting onSubmit={onSubmit} />\r\n        </SettingContainerBlock>\r\n    );\r\n};\r\n\r\nexport default withRouter(SettingContainer);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport MakerLoading from './containers/makers/MakerLoading';\nimport MenuBar from './components/MenuBar';\nimport SettingContainer from './containers/setting/SettingContainer';\n//import DBmakerForm from './containers/DBmakerForm';\n\nfunction App() {\n  return (\n    <>\n      <Route path=\"/\" component={MenuBar} exact />\n      <Route path=\"/setting\" component={SettingContainer} />\n      <Route path=\"/maker\" component={MakerLoading} />\n      {/* <Route path=\"/register\" component={DBmakerForm} /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga from '../lib/createRequestSaga';\r\nimport * as saveAPI from '../lib/api/DBSave';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst DB_SAVE = 'save/DB_SAVE';\r\nconst DB_SAVE_SUCCESS = 'save/DB_SAVE_SUCCESS';\r\nconst DB_SAVE_FAILURE = 'save/DB_SAVE_FAILURE';\r\nconst CHANGE_FIELD = 'save/CHANGE_FIELD';\r\n\r\nexport const dbSave = createAction(\r\n    DB_SAVE, ({ menuname, main, description, main_ingredient, ingredient,\r\n                category, cook_type, sauce_base }) => ({\r\n        menuname,\r\n        main,\r\n        description,\r\n        main_ingredient,\r\n        ingredient,\r\n        category,\r\n        cook_type,\r\n        sauce_base,\r\n    })\r\n);\r\n\r\nexport const change = createAction(\r\n    CHANGE_FIELD,\r\n);\r\n\r\n\r\nconst initialState = {\r\n    menuname: null,\r\n    main: null,\r\n    description: \"설명이 없습니다\",\r\n    main_ingredient: null,\r\n    ingredient: null,\r\n    category: null,\r\n    cook_type: null,\r\n    sauce_base: null,\r\n};\r\n\r\nconst saveSaga = createRequestSaga(DB_SAVE, saveAPI.dbmenuSave);\r\nexport function* dbSaveSaga() {\r\n    yield takeLatest(DB_SAVE, saveSaga);\r\n};\r\n\r\nconst DBSave = handleActions (\r\n    {\r\n        [DB_SAVE_SUCCESS]: state => initialState,\r\n        [DB_SAVE_FAILURE]: (state, { payload }) => ({\r\n            ...state,\r\n            menuname: null,\r\n            main: null,\r\n            description: \"설명이 없습니다\",\r\n            main_ingredient: null,\r\n            ingredient: null,\r\n            category: null,\r\n            cook_type: null,\r\n            sauce_base: null\r\n        }),\r\n        [CHANGE_FIELD]: (state, { payload: { form, value } }) => ({\r\n            ...state,\r\n            [form]: value,\r\n        })\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default DBSave;","import client from \"./client\";\r\n\r\n// db save\r\nexport const dbmenuSave = ({\r\n    menuname,\r\n    main,\r\n    description,\r\n    main_ingredient,\r\n    ingredient,\r\n    category,\r\n    cook_type,\r\n    sauce_base }) => client.post('/api/menusave/register', {\r\n        menuname, main, description, main_ingredient, ingredient, category, cook_type, sauce_base })\r\n                        \r\n\r\n// const MenuSchema = new Schema ({\r\n//     menuname: String,\r\n//     image: Buffer,\r\n//     description: String,\r\n//     main_ingredient: String,\r\n//     ingredient: [String],\r\n// });\r\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport maker, { menuSaga } from './maker';\r\nimport DBSave, { dbSaveSaga } from './DBSave';\r\nimport setting from './setting';\r\n\r\nconst rootReducer = combineReducers({\r\n    maker,\r\n    DBSave,\r\n    setting\r\n});\r\n\r\nexport function* rootSaga() {\r\n    yield all([dbSaveSaga(), menuSaga()]);\r\n};\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware,),);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}